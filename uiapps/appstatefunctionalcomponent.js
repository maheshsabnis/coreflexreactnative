/* eslint-disable prettier/prettier */
/* eslint-disable semi */
import { View, AppState, Text } from "react-native";
import { styles } from "./styles";
import { useEffect, useState } from "react";

const AppStateFunctionalComponent = () => {
    /* The appState state property that holds the current  execution state of the app*/
    const [appState, setAppState] = useState(AppState.currentState);

    useEffect(()=>{
        /* Code Execution after mounting 
            addEventListener('EVENT-NAME', callback function that will be invoked when the event is fired)
        */
       console.log(`The Component Mounting is completed`);
        AppState.addEventListener('change', _handleAppStateChange);
        return ()=>{
            /* Code Execution after unmounting started 
               deregister / remove event registration 
                removeEventListener()
            */
                console.log(`The Component is being unmounted`);
                this.AppState.removeEventListener('change', _handleAppStateChange);
        };
    });
    /* the  nextAppState will be the Application State values that will be generated by the devive Hardware interation */
    const _handleAppStateChange = (nextAppState) => {
        if (appState.match(/inactive|background/) && nextAppState === 'active') {
          console.log('App has come to the foreground!')
        }
        setAppState(nextAppState);
      }

  return (

    <View style={styles.container}>
        <Text style={styles.text}>
            The State is : {appState}
        </Text>
    </View>
  );
};

export default AppStateFunctionalComponent;